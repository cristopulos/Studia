package so.lab3.algorithms;

import java.util.List;

import so.lab3.structs.Frame;
import so.lab3.structs.Request;
import so.lab4.lruApprox.FramesManagingAlgorithm;

public class LRUFrameManagingAlgorithm extends FramesManagingAlgorithm {

	public LRUFrameManagingAlgorithm(int pagesQuant, int framesQuant, List<Request> reqList) {
		super(pagesQuant, framesQuant, reqList);
	}

	@Override
	protected Frame chooseFrameToSwapPages() {
		int lastRefTime = Integer.MAX_VALUE;
		Frame frameToChoose = null;
		for (Frame f : physicMemory) {
			if (f.getLastPageReferenceTime() < lastRefTime) {
				lastRefTime = f.getLastPageReferenceTime();
				frameToChoose = f;
			}
		}
		return frameToChoose;
	}

}
