package so.lab3.algorithms;

import java.util.List;

import so.lab3.structs.Request;
import so.lab3.util.AlgorithmType;
import so.lab4.lruApprox.FramesManagingAlgorithm;
import so.lab4.lruApprox.LRUApproxFrameManbagingAlgorithm;

public class FramesManagingAlgorithmFactory {

	public static FramesManagingAlgorithm createFramesManagingALgorithm(
			AlgorithmType type, int pagesQuant, int framesQuant,
			List<Request> requestList) {
		switch (type) {
		case FIFO:
			return new FIFOFrameManagingAlgorithm(pagesQuant, framesQuant,
					requestList);
		case OPT:
			return new OPTFramesManagingAlgorithm(pagesQuant, framesQuant,
					requestList);
		case LRU:
			return new LRUFrameManagingAlgorithm(pagesQuant, framesQuant,
					requestList);
		case LRUApprox:
			return new LRUApproxFrameManbagingAlgorithm(pagesQuant,
					framesQuant, requestList);
		case RAND:
			return new RANDFrameManagingAlgorithm(pagesQuant, framesQuant,
					requestList);
		}
		return null;

	}

}
